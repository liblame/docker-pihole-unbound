name: Get latest pihole release, build it and push to dockerhub

on:
  # cron job to trigger the build on any push to main
  push:
    branches:
      - 'main'
  schedule:
  # cron job to trigger the build daily
    - cron:  '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Get latest release of pihole docker
      id: pihole_version
      env:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: "pi-hole/docker-pi-hole"
        type: "stable"
      run: |
        pihole_version=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest")
        echo "::set-output name=tag_name::$(echo $pihole_version | jq -r '.tag_name')"
        echo "::set-output name=name::$(echo $pihole_version | jq -r '.name')"
        echo "::set-output name=url::$(echo $pihole_version | jq -r '.html_url')"

    - name: check if celease is new
      id: check_release
      run: |
        if [ "${{ steps.latest_release.outputs.name }}" != "${{ github.event.before }}" ]
        then
            echo "::set-output name=new_release::true"
        else
            echo "::set-output name=new_release::false"
        fi

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      if: steps.check_release.outputs.new_release == 'true'
      with:
        build-args: PIHOLE_VERSION=${{ steps.pihole_version.outputs.release }}
        context: "{{defaultContext}}:pihole-unbound/"
        platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
        push: true
        tags: liblame/pihole-unbound:latest,liblame/pihole-unbound:${{ steps.pihole_version.outputs.release }}
